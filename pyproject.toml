[build-system]
requires = ["setuptools>=64.0.1", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = [
    "src",
]

[tool.setuptools_scm]

[project]
name = "mpes-tools"
dynamic = ["version"]
description = "A set of GUI tools for the analysis of multidimensional photoemission data"
authors = [
    {name = "OpenCOMPES team", email = "sed-processor@mpes.science"},
]
readme = "README.md"
keywords = ["mpes", "arpes", "trarpes", "gui"]
license = { file = "LICENSE" }
requires-python = ">=3.9,<3.13"
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "ipython>=8.0.0",
    "lmfit>=1.0.3",
    "matplotlib>=3.8.0",
    "numpy>=1.26.1,<2.0",
    "PyQt5>=5.0.0",
    "xarray>=0.20.2",
    "nxarray>=0.4.4",
    "superqt >=0.3.0",
]

[project.urls]
repository = "https://github.com/OpenCOMPES/mpes-tools"
documentation = "https://opencompes.github.io/mpes-tools/"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.1",
    "pytest-cov>=3.0.0",
    "pytest-xdist>=2.5.0",
    "pytest-clarity>=1.0.1",
    "pytest-qt",
    "ruff<0.3.0,>=0.1.7",
    "mypy<1.10.0,>=1.6.0",
    "pre-commit>=3.0.0",
]

docs = [
    "sphinx>=7.1.2",
    "tomlkit>=0.12.0",
    "sphinx-autodoc-typehints>=1.17.0",
    "nbsphinx>=0.9.3",
    "myst-parser>=2.0.0",
    "pydata-sphinx-theme>=0.15.0",
]

notebook = [
    "jupyter>=1.0.0",
    "ipykernel>=6.9.1",
    "jupyterlab>=4.0",
    "jupyterlab-h5web>=8.0.0",
]
all = [
    "mpes-tools[dev,docs,notebook]",
]

[tool.coverage.report]
omit = [
    "./config.py",
    "./config-3.py",
]

[tool.ruff]
include = ["src/*.py", "tests/*.py"]
lint.select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
    "F841", # unused variable
    "F401", # unused imports
    "ARG", # unused arguments
]
lint.ignore = [
    "E701", # Multiple statements on one line (colon)
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLR5501", # else-if-used
    "PLW2901", # redefined-loop-name
]
lint.fixable = ["ALL"]
line-length = 100 # change the default line length number or characters.

[tool.mypy]
strict = false
ignore_missing_imports = true
follow_imports = "silent"
no_strict_optional = true
disable_error_code = "import, annotation-unchecked"
