[tool.poetry]
name = "mpes-tools"
version = "0.1.0"
description = "A set of GUI tools for the analysis of multidimensional photoemission data"
authors = ["OpenCOMPES team <sed-processor@mpes.science>"]
readme = "README.md"
repository = "https://github.com/OpenCOMPES/mpes-tools"
documentation = "https://opencompes.github.io/mpes-tools/"
packages = [{include = "mpes_tools", from = "src"}]
keywords = ["mpes", "arpes", "trarpes", "gui"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"


[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.1"
pytest-cov = ">=3.0.0"
pytest-xdist = ">=2.5.0"
pytest-clarity = ">=1.0.1"
ruff = ">=0.1.7, <0.3.0"
mypy = ">=1.6.0, <1.10.0"
pre-commit = ">=3.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = ">=7.1.2"
sphinx-rtd-theme = ">=1.0.0"
tomlkit = ">=0.12.0"
sphinx-autodoc-typehints = ">=1.17.0"
nbsphinx = ">=0.9.3"
myst-parser = ">=2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
omit = [
    "config.py",
    "config-3.py",
]

[tool.ruff]
include = ["src/mpes-tools/*.py", "tests/*.py"]
lint.select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
    "F841", # unused variable
    "F401", # unused imports
    "ARG", # unused arguments
]
lint.ignore = [
    "E701", # Multiple statements on one line (colon)
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLR5501", # else-if-used
    "PLW2901", # redefined-loop-name
]
lint.fixable = ["ALL"]
line-length = 100 # change the default line length number or characters.

[tool.mypy]
strict = false
ignore_missing_imports = true
follow_imports = "silent"
no_strict_optional = true
disable_error_code = "import, annotation-unchecked"
